name: ci

on:
  # Run on any push to main or any tag
  push:
    branches:
      - main
    tags:
      - '*'
  # Run on any pull request
  pull_request:
    branches:
      - main

env:
  GIT_REPOSITORY: nicell/docker-lune
  DOCKER_REPOSITORY: nicell/lune

jobs:
  build-bin:
    name: bin
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
      
      - name: Cache docker registry
        uses: actions/cache@v4
        with:
          key: registry-${{ github.sha }}
          path: ${{ runner.temp }}/registry

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          # Key is named differently to avoid collision
          key: ${{ runner.os }}-multi-buildx-${{ github.sha }}
          restore-keys: ${{ runner.os }}-multi-buildx

      - name: Start local Docker registry
        run: |
          # Docker save / load does not support multi-arch images.
          # This sets up a local registry that I can push the images to.
          docker run -d -p 5000:5000 -e 'REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY=/var/lib/registry' -v '${{ runner.temp }}/registry:/var/lib/registry' registry:2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: network=host

      - name: Build image
        run: |
          docker buildx build -f bin.dockerfile --provenance=false --platform=linux/amd64,linux/arm64 -t localhost:5000/bin --push .

  build:
    needs: build-bin
    name: ${{ matrix.kind }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        kind: ["debian", "distroless"]
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
      
      - name: Cache docker registry
        uses: actions/cache@v4
        with:
          key: registry-${{ github.sha }}
          fail-on-cache-miss: true
          path: ${{ runner.temp }}/registry

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          # Key is named differently to avoid collision
          key: ${{ runner.os }}-multi-buildx-${{ github.sha }}
          restore-keys: ${{ runner.os }}-multi-buildx

      - name: Start local Docker registry
        run: |
          # Docker save / load does not support multi-arch images.
          # This sets up a local registry that I can push the images to.
          docker run -d -p 5000:5000 -e 'REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY=/var/lib/registry' -v '${{ runner.temp }}/registry:/var/lib/registry' registry:2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: network=host

      - name: Build image
        run: |
          docker buildx build -f ${{ matrix.kind }}.dockerfile --provenance=false --platform=linux/amd64,linux/arm64 --build-arg BIN_IMAGE=localhost:5000/bin -t localhost:5000/${{ matrix.kind }} --push .

      - name: Test if entry goes to Lune
        run: |
          docker run -t localhost:5000/${{ matrix.kind }} --version

      - name: Test if entry script forwards to other binaries
        if: ${{ matrix.kind != 'distroless' }}
        run: |
          docker run -t localhost:5000/${{ matrix.kind }} echo 'entry works'

      - name: Login to Docker Hub
        if: github.repository == env.GIT_REPOSITORY && github.ref_type == 'tag'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Push named images
        if: github.repository == env.GIT_REPOSITORY && github.ref_type == 'tag'
        run: |
          docker buildx imagetools create localhost:5000/${{ matrix.kind }} -t ${{ env.DOCKER_REPOSITORY }}:${{ matrix.kind }}-${{ github.ref_name }} -t ${{ env.DOCKER_REPOSITORY }}:${{ matrix.kind }}
          docker pull --platform linux/amd64 ${{ env.DOCKER_REPOSITORY }}:${{ matrix.kind }}-${{ github.ref_name }} 
          docker pull --platform linux/amd64 ${{ env.DOCKER_REPOSITORY }}:${{ matrix.kind }}
          docker pull --platform linux/arm64 ${{ env.DOCKER_REPOSITORY }}:${{ matrix.kind }}-${{ github.ref_name }} 
          docker pull --platform linux/arm64 ${{ env.DOCKER_REPOSITORY }}:${{ matrix.kind }}

      - name: Push bin images
        if: github.repository == env.GIT_REPOSITORY && github.ref_type == 'tag' && matrix.kind == 'debian'
        run: |
          docker buildx imagetools create localhost:5000/bin -t ${{ env.DOCKER_REPOSITORY }}:bin-${{ github.ref_name }} -t ${{ env.DOCKER_REPOSITORY }}:bin
          docker pull --platform linux/amd64 ${{ env.DOCKER_REPOSITORY }}:bin-${{ github.ref_name }}
          docker pull --platform linux/amd64 ${{ env.DOCKER_REPOSITORY }}:bin
          docker pull --platform linux/arm64 ${{ env.DOCKER_REPOSITORY }}:bin-${{ github.ref_name }}
          docker pull --platform linux/arm64 ${{ env.DOCKER_REPOSITORY }}:bin

      - name: Push default images
        if: github.repository == env.GIT_REPOSITORY && github.ref_type == 'tag' && matrix.kind == 'debian'
        run: |
          docker buildx imagetools create localhost:5000/${{ matrix.kind }} -t ${{ env.DOCKER_REPOSITORY }}:${{ github.ref_name }} -t ${{ env.DOCKER_REPOSITORY }}:latest
          docker pull --platform linux/amd64 ${{ env.DOCKER_REPOSITORY }}:${{ github.ref_name }}
          docker pull --platform linux/amd64 ${{ env.DOCKER_REPOSITORY }}:latest
          docker pull --platform linux/arm64 ${{ env.DOCKER_REPOSITORY }}:${{ github.ref_name }}
          docker pull --platform linux/arm64 ${{ env.DOCKER_REPOSITORY }}:latest

      - name: Update Docker Hub Description
        if: github.repository == env.GIT_REPOSITORY && github.ref_type == 'tag' && matrix.kind == 'debian'
        uses: peter-evans/dockerhub-description@v4
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          repository: ${{ env.DOCKER_REPOSITORY }}
